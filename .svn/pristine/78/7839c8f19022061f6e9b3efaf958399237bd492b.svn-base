package com.techsoft.controller.warehouse;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.github.pagehelper.PageInfo;
import com.techsoft.client.service.config.ClientConfigDictionaryService;
import com.techsoft.client.service.warehouse.ClientWarehouseAreaService;
import com.techsoft.client.service.warehouse.ClientWarehouseStrategyDownshelfItemService;
import com.techsoft.client.service.warehouse.ClientWarehouseStrategyDownshelfService;
import com.techsoft.common.BusinessException;
import com.techsoft.common.SQLException;
import com.techsoft.common.constants.Constants;
import com.techsoft.common.enums.EnumDictionary;
import com.techsoft.common.maps.MapYesOrNo;
import com.techsoft.common.persistence.ResultMessage;
import com.techsoft.common.persistence.ReturnPageInfo;
import com.techsoft.controller.BaseController;
import com.techsoft.entity.common.ConfigDictionary;
import com.techsoft.entity.common.WarehouseArea;
import com.techsoft.entity.common.WarehouseStrategyDownshelf;
import com.techsoft.entity.config.ConfigDictionaryParamVo;
import com.techsoft.entity.warehouse.WarehouseAreaParamVo;
import com.techsoft.entity.warehouse.WarehouseStrategyDownshelfItemParamVo;
import com.techsoft.entity.warehouse.WarehouseStrategyDownshelfItemVo;

@Controller
@RequestMapping("/warehouse/warehouseStrategyDownshelfItem")
public class WarehouseStrategyDownshelfItemController extends BaseController {
	@Autowired
	private ClientWarehouseStrategyDownshelfItemService clientWarehouseStrategyDownshelfItemService;
	@Autowired
	private ClientConfigDictionaryService clientConfigDictionaryService;
	@Autowired
	private ClientWarehouseAreaService clientWarehouseAreaService;
	@Autowired
	private ClientWarehouseStrategyDownshelfService clientWarehouseStrategyDownshelfService;

	/**
	 * 页面关联数据初始化
	 * 
	 * @param modelAndView
	 */
	public void initData(ModelAndView modelAndView) {
		modelAndView.addObject("mapYesOrNo", MapYesOrNo.getMap());
	}

	@RequestMapping("/list")
	public ModelAndView list(HttpServletRequest request) {
		ModelAndView modelAndView = new ModelAndView();
		initData(modelAndView);
		modelAndView.setViewName("warehouse/warehouseStrategyDownshelfItem-list");
		return modelAndView;
	}

	@RequestMapping("/edit")
	public ModelAndView edit(HttpServletRequest request, Long id,Long strategyId) {
		List<ConfigDictionary> attributeList;
		List<ConfigDictionary> modeMatchingList;
		List<ConfigDictionary> adcdesOrderList;
		List<WarehouseArea> areaList;
		ConfigDictionaryParamVo dictionaryParamVo = new ConfigDictionaryParamVo();
		WarehouseAreaParamVo areaParamVo = new WarehouseAreaParamVo();
		WarehouseStrategyDownshelf warehouseStrategyDownshelf = new WarehouseStrategyDownshelf();

		dictionaryParamVo.setIsValid("1");
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("warehouse/warehouseStrategyDownshelfItem-edit");
		WarehouseStrategyDownshelfItemVo entity = new WarehouseStrategyDownshelfItemVo();
		try {
			if (id != null) {
				entity = clientWarehouseStrategyDownshelfItemService.getVoByID(id, this.getCommonParam(request));
			}
			warehouseStrategyDownshelf = clientWarehouseStrategyDownshelfService.selectById(strategyId, null);
			areaParamVo.setWarehouseId(warehouseStrategyDownshelf.getWarehouseId());
			areaParamVo.setIsValid("1");
			areaList = clientWarehouseAreaService.selectListByParamVo(areaParamVo, null);

			dictionaryParamVo.setParentId(EnumDictionary.DOWNSHELF_ATTRIBUTE.getValue());
			attributeList = clientConfigDictionaryService.selectListByParamVo(dictionaryParamVo, null);

			dictionaryParamVo.setParentId(EnumDictionary.DOWNSHELF_MODE_MATCHING.getValue());
			modeMatchingList = clientConfigDictionaryService.selectListByParamVo(dictionaryParamVo, null);

			dictionaryParamVo.setParentId(EnumDictionary.DOWNSHELF_ATTRIBUTE_ADCDES_ORDER.getValue());
			adcdesOrderList = clientConfigDictionaryService.selectListByParamVo(dictionaryParamVo, null);
			modelAndView.addObject("attributeList", attributeList);
			modelAndView.addObject("modeMatchingList", modeMatchingList);
			modelAndView.addObject("adcdesOrderList", adcdesOrderList);
			modelAndView.addObject("areaList", areaList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		modelAndView.addObject("entity", entity);
		initData(modelAndView);
		return modelAndView;
	}

	@ResponseBody
	@RequestMapping("/list/json")
	@SuppressWarnings("rawtypes")
	public ReturnPageInfo listJson(HttpServletRequest request,
			WarehouseStrategyDownshelfItemParamVo warehouseStrategyDownshelfItemParamVo, Integer pageIndex,
			Integer pageSize) {
		PageInfo pageInfo = null;
		Integer pageNumber = 0;
		if (pageSize != null) {
			pageNumber = pageSize;
		} else {
			pageNumber = Constants.SEARCH_PAGE_SIZE;
		}
		try {
			if (warehouseStrategyDownshelfItemParamVo == null) {
				warehouseStrategyDownshelfItemParamVo = new WarehouseStrategyDownshelfItemParamVo();
			}
			pageInfo = clientWarehouseStrategyDownshelfItemService.selectPageVoByParamVo(
					warehouseStrategyDownshelfItemParamVo, this.getCommonParam(request), pageIndex, pageNumber);
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (BusinessException e) {
			e.printStackTrace();
		}
		return new ReturnPageInfo(pageInfo);
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	@ResponseBody
	public ResultMessage save(HttpServletRequest request,
			WarehouseStrategyDownshelfItemParamVo warehouseStrategyDownshelfItemParamVo) {
		ResultMessage resultMessage = new ResultMessage();

		warehouseStrategyDownshelfItemParamVo.setModifyUserId(getLoginUserId(request));
		resultMessage = clientWarehouseStrategyDownshelfItemService.saveOrUpdate(warehouseStrategyDownshelfItemParamVo,
				this.getCommonParam(request));

		return resultMessage;
	}

}
