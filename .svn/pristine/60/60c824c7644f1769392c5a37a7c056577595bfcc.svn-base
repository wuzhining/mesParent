package com.techsoft.controller.bill;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.github.pagehelper.PageInfo;
import com.techsoft.client.service.bill.ClientBillInspectService;
import com.techsoft.client.service.config.ClientConfigDictionaryService;
import com.techsoft.client.service.firm.ClientFirmPartnerService;
import com.techsoft.client.service.product.ClientProductMaterialService;
import com.techsoft.common.BusinessException;
import com.techsoft.common.SQLException;
import com.techsoft.common.constants.Constants;
import com.techsoft.common.enums.EnumDictBillStatus;
import com.techsoft.common.enums.EnumDictionary;
import com.techsoft.common.maps.MapYesOrNo;
import com.techsoft.common.persistence.ResultMessage;
import com.techsoft.common.persistence.ReturnPageInfo;
import com.techsoft.controller.BaseController;
import com.techsoft.entity.bill.BillInspectParamVo;
import com.techsoft.entity.bill.BillInspectVo;
import com.techsoft.entity.common.ConfigArea;
import com.techsoft.entity.common.ConfigDictionary;
import com.techsoft.entity.common.FirmPartner;
import com.techsoft.entity.common.ProductMaterial;
import com.techsoft.entity.config.ConfigAreaParamVo;
import com.techsoft.entity.firm.FirmPartnerParamVo;
import com.techsoft.entity.product.ProductMaterialParamVo;

@Controller
@RequestMapping("/bill/billInspect")
public class BillInspectController extends BaseController {
	@Autowired
	private ClientBillInspectService clientBillInspectService;
	@Autowired
	private ClientConfigDictionaryService clientConfigDictionaryService;
	@Autowired
	private ClientProductMaterialService clientProductMaterialService;
	@Autowired
	private ClientFirmPartnerService clientFirmPartnerService;
	/**
	 * 页面关联数据初始化
	 * @param modelAndView
	 */
	public void initData(ModelAndView modelAndView) { 
		try {
			//物料
			List<ProductMaterial> productMateriaList = clientProductMaterialService.selectListByParamVo(new ProductMaterialParamVo(), this.getCommonParam(null));
			modelAndView.addObject("productMateriaList", productMateriaList);
		    //取IQC检验方式集合
			List<ConfigDictionary> inspectModeList = clientConfigDictionaryService.selectListByParentId(EnumDictionary.QUALITY_INSPECT_MODE.getValue());
			modelAndView.addObject("inspectModeList", inspectModeList);
			//源单据类型
			List<ConfigDictionary> fromBillTypeList = clientConfigDictionaryService.selectListByParentId(EnumDictionary.BILL_TYPE.getValue());
			modelAndView.addObject("fromBillTypeList", fromBillTypeList);
			//检验单状态
			List<ConfigDictionary> inspectStatusList = clientConfigDictionaryService.selectListByParentId(EnumDictionary.BILL_STATUS.getValue());
			modelAndView.addObject("inspectStatusList", inspectStatusList);
			//检验结果
			List<ConfigDictionary> inspectResultList = clientConfigDictionaryService.selectListByParentId(EnumDictionary.QUALITY_INSPECT_RESULT.getValue());
			modelAndView.addObject("inspectResultList", inspectResultList);
			//处理结果
			List<ConfigDictionary> dealResultList = clientConfigDictionaryService.selectListByParentId(EnumDictionary.QUALITY_INSPECT_DEAL_RESULT.getValue());
			modelAndView.addObject("dealResultList", dealResultList);
			//合作伙伴
			List<FirmPartner> firmPartnerList = clientFirmPartnerService.selectListByParamVo(new FirmPartnerParamVo(), this.getCommonParam(null));
			modelAndView.addObject("firmPartnerList", firmPartnerList);

			modelAndView.addObject("mapYesOrNo", MapYesOrNo.getMap());
		} catch (BusinessException | SQLException e) {
			e.printStackTrace();
		}
	}
	
	
	@RequestMapping("/list")
	public ModelAndView list(HttpServletRequest request) {
		ModelAndView modelAndView = new ModelAndView();
		initData(modelAndView);
		modelAndView.setViewName("bill/billInspect-list");
		return modelAndView;
	}
	

	@RequestMapping("/edit")
	public ModelAndView edit(HttpServletRequest request, Long id) {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("bill/billInspect-edit");
		BillInspectVo entity = new BillInspectVo();
		try {

			if (id != null) {
				entity = clientBillInspectService.getVoByID(id, this.getCommonParam(request));
				
				if(entity.getMaterialId()!= null){
					ProductMaterial	productMaterial = clientProductMaterialService.getVoByID(entity.getMaterialId(), this.getCommonParam(request));
					modelAndView.addObject("productMaterial", productMaterial);
				}
				
				if(entity.getSupplierId()!= null){
					FirmPartner	firmPartner = clientFirmPartnerService.getVoByID(entity.getSupplierId(), this.getCommonParam(request));
					modelAndView.addObject("firmPartner", firmPartner);
				}
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		modelAndView.addObject("entity", entity);
		initData(modelAndView);
		return modelAndView;
	}

	@ResponseBody
	@RequestMapping("/list/json")
	@SuppressWarnings("rawtypes")	
	public ReturnPageInfo listJson(HttpServletRequest request,
			BillInspectParamVo billInspectParamVo, Integer pageIndex, Integer pageSize) {
		PageInfo pageInfo = null;
		Integer pageNumber = 0;
		if (pageSize != null) {
			pageNumber = pageSize;
		} else {
			pageNumber = Constants.SEARCH_PAGE_SIZE;
		}		
		try {
            if(billInspectParamVo==null){
            	billInspectParamVo = new BillInspectParamVo();
            }
			pageInfo = clientBillInspectService.selectPageVoByParamVo(
					billInspectParamVo, this.getCommonParam(request),
					pageIndex, pageNumber);
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (BusinessException e) {
			e.printStackTrace();
		}
		return new ReturnPageInfo(pageInfo);
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	@ResponseBody
	public ResultMessage save(HttpServletRequest request,
			BillInspectParamVo billInspectParamVo) {
		ResultMessage resultMessage = new ResultMessage();
	 
	    billInspectParamVo.setModifyUserId(getLoginUserId(request)); 
		resultMessage = clientBillInspectService.saveOrUpdate(billInspectParamVo,
				this.getCommonParam(request));

		return resultMessage;
	}
	
	//审核
	@RequestMapping(value = "/verify", method = RequestMethod.POST)
	@ResponseBody
	public ResultMessage verify(HttpServletRequest request,BillInspectParamVo billInspectParamVo) {
		ResultMessage resultMessage = new ResultMessage();
	 
		billInspectParamVo.setModifyUserId(getLoginUserId(request));
		billInspectParamVo.setInspectStatusDictId(EnumDictBillStatus.DOING.getValue());
		resultMessage = clientBillInspectService.saveExamine(billInspectParamVo,this.getCommonParam(request));

		return resultMessage;
	}
	
	
	//审核
	@RequestMapping(value = "/inspectionSave", method = RequestMethod.POST)
	@ResponseBody
	public ResultMessage inspectionSave(HttpServletRequest request,BillInspectParamVo billInspectParamVo) {
		ResultMessage resultMessage = new ResultMessage();
	 
		billInspectParamVo.setModifyUserId(getLoginUserId(request));
		billInspectParamVo.setInspectStatusDictId(EnumDictBillStatus.DOING.getValue());
		resultMessage = clientBillInspectService.inspectionOKorNG(billInspectParamVo,this.getCommonParam(request));

		return resultMessage;
	}



}
