package com.techsoft.controller.bill;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.github.pagehelper.PageInfo;

import com.techsoft.common.BusinessException;
import com.techsoft.common.constants.Constants;
import com.techsoft.common.enums.EnumDictionary;
import com.techsoft.common.maps.MapUserStatus;
import com.techsoft.common.maps.MapYesOrNo;
import com.techsoft.common.persistence.ResultMessage;
import com.techsoft.common.persistence.ReturnPageInfo;
import com.techsoft.common.SQLException;
import com.techsoft.controller.BaseController;

import com.techsoft.client.service.bill.ClientBillWorkorderService;
import com.techsoft.client.service.config.ClientConfigDictionaryService;
import com.techsoft.client.service.product.ClientProductMainService;
import com.techsoft.client.service.struct.ClientStructProcessService;
import com.techsoft.client.service.struct.ClientStructProductionlineService;
import com.techsoft.client.service.struct.ClientStructWorkshopService;
import com.techsoft.entity.bill.BillWorkorderVo;
import com.techsoft.entity.common.ConfigDictionary;
import com.techsoft.entity.common.ProductMain;
import com.techsoft.entity.common.StructProcess;
import com.techsoft.entity.common.StructProductionline;
import com.techsoft.entity.common.StructWorkshop;
import com.techsoft.entity.product.ProductMainParamVo;
import com.techsoft.entity.struct.StructProcessParamVo;
import com.techsoft.entity.struct.StructProductionlineParamVo;
import com.techsoft.entity.struct.StructWorkshopParamVo;
import com.techsoft.entity.bill.BillWorkorderParamVo;

@Controller
@RequestMapping("/bill/billWorkorder")
public class BillWorkorderController extends BaseController {
	@Autowired
	private ClientBillWorkorderService clientBillWorkorderService;
	@Autowired
	private ClientConfigDictionaryService clientConfigDictionaryService;
	@Autowired
	private ClientStructWorkshopService clientStructWorkshopService;
	@Autowired
	private ClientProductMainService clientProductMainService;
	@Autowired
	private ClientStructProcessService clientStructProcessService;
	/**
	 * 页面关联数据初始化
	 * @param modelAndView
	 */
	public void initData(ModelAndView modelAndView) { 
		try {
			//客户ID
			List<ConfigDictionary> 	customerList = clientConfigDictionaryService
					.selectListByParentId(EnumDictionary.FIRM_PARTNER_TYPE.getValue());
			modelAndView.addObject("customerList", customerList);
			//车间
			List<StructWorkshop> structWorkshopList = clientStructWorkshopService.selectListByParamVo(new StructWorkshopParamVo(), this.getCommonParam(null));
			modelAndView.addObject("structWorkshopList", structWorkshopList);
			
			//工艺流程
			List<StructProcess> structProcessList = clientStructProcessService.selectListByParamVo(new StructProcessParamVo(), this.getCommonParam(null));
			modelAndView.addObject("structProcessList", structProcessList);
			
			//制程
			List<ConfigDictionary> processList = clientConfigDictionaryService
					.selectListByParentId(EnumDictionary.STRUCT_PROCESS.getValue());
			modelAndView.addObject("processList", processList);
			
			//产品ID
			List<ProductMain> productMainList =clientProductMainService.selectListByParamVo(new ProductMainParamVo(), this.getCommonParam(null));
			modelAndView.addObject("productMainList", productMainList);
			
			//审核状态数据字典
			List<ConfigDictionary> auditStatusDictList =clientConfigDictionaryService.selectListByParentId(EnumDictionary.AUDIT_STATUS.getValue());
			modelAndView.addObject("auditStatusDictList",auditStatusDictList);
			
			//工单状态
			List<ConfigDictionary> workorderStatusList = clientConfigDictionaryService
					.selectListByParentId(EnumDictionary.BILL_STATUS_WORKORDER.getValue());
			modelAndView.addObject("workorderStatusList", workorderStatusList);
			modelAndView.addObject("mapYesOrNo", MapYesOrNo.getMap());  
			modelAndView.addObject("mapUserStatus", MapUserStatus.getMap());  
		} catch (BusinessException | SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
	@RequestMapping("/list")
	public ModelAndView list(HttpServletRequest request) {
		ModelAndView modelAndView = new ModelAndView();
		initData(modelAndView);
		modelAndView.setViewName("bill/billWorkorder-list");
		return modelAndView;
	}
	

	@RequestMapping("/edit")
	public ModelAndView edit(HttpServletRequest request, Long id) {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("bill/billWorkorder-edit");
		BillWorkorderVo entity = new BillWorkorderVo();
		try {
		
			
			if (id != null) {
				entity = clientBillWorkorderService.getVoByID(id, this.getCommonParam(request));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		modelAndView.addObject("entity", entity);
		initData(modelAndView);
		return modelAndView;
	}

	@ResponseBody
	@RequestMapping("/list/json")
	@SuppressWarnings("rawtypes")	
	public ReturnPageInfo listJson(HttpServletRequest request,
			BillWorkorderParamVo billWorkorderParamVo, Integer pageIndex, Integer pageSize) {
		PageInfo pageInfo = null;
		Integer pageNumber = 0;
		if (pageSize != null) {
			pageNumber = pageSize;
		} else {
			pageNumber = Constants.SEARCH_PAGE_SIZE;
		}		
		try {
            if(billWorkorderParamVo==null){
            	billWorkorderParamVo = new BillWorkorderParamVo();
            }
			pageInfo = clientBillWorkorderService.selectPageVoByParamVo(
					billWorkorderParamVo, this.getCommonParam(request),
					pageIndex, pageNumber);
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (BusinessException e) {
			e.printStackTrace();
		}
		return new ReturnPageInfo(pageInfo);
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	@ResponseBody
	public ResultMessage save(HttpServletRequest request,
			BillWorkorderParamVo billWorkorderParamVo) {
		ResultMessage resultMessage = new ResultMessage();
	 
	    billWorkorderParamVo.setModifyUserId(getLoginUserId(request)); 
		resultMessage = clientBillWorkorderService.saveOrUpdate(billWorkorderParamVo,
				this.getCommonParam(request));

		return resultMessage;
	}


}
