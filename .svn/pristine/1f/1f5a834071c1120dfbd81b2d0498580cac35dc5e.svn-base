package com.techsoft.dao.product;

import javax.annotation.Resource;

import org.springframework.stereotype.Repository;

import com.techsoft.common.BaseDaoImpl;
import com.techsoft.common.BaseMapper;
import com.techsoft.common.BusinessException;
import com.techsoft.common.SQLException;
import com.techsoft.mapper.sys.MycatSequenceMapper;
import com.techsoft.entity.common.ProductMain;
import com.techsoft.mapper.product.ProductMainMapper;

@Repository
public class ProductMainDaoImpl extends BaseDaoImpl<ProductMain> implements ProductMainDao {
	@Resource
	protected ProductMainMapper productMainMapper;
	@Resource
	protected MycatSequenceMapper mycatSequenceMapper;	
	
	@Override
	public Class<ProductMain> getEntityClass() {
		return ProductMain.class;
	}	
	
	@Override
	public BaseMapper<ProductMain> getBaseMapper() {
		return this.productMainMapper;
	}
	
	@Override
	@SuppressWarnings({ "rawtypes" })
	public BaseMapper getSeqMapper() {
		return mycatSequenceMapper;
	}
	
	@Override
	public String getTableName() {
		return "PRODUCT_MAIN";
	}
	
	@Override
	public void insertSaveCheck(ProductMain value) throws BusinessException, SQLException {
		if (value.getCreateUserId() == null || value.getCreateUserId().equals(0L)) {
			throw new BusinessException("请先登录 ");
		}
	
		if (value.getSupplierId() == null || value.getSupplierId().equals(0L)) {
			throw new BusinessException("供应商不能为空 ");
		}
		if (value.getClassesId() == null || value.getClassesId().equals(0L)) {
			throw new BusinessException("产品分类不能为空 ");
		}
		if (value.getProductTypeDictId() == null || value.getProductTypeDictId().equals(0L)) {
			throw new BusinessException("产品类型不能为空 ");
		}
		if (value.getProductStatusDictId() == null || value.getProductStatusDictId().equals(0L)) {
			throw new BusinessException("产品状态不能为空 ");
		}
		if (value.getProductSourceDictId() == null || value.getProductSourceDictId().equals(0L)) {
			throw new BusinessException("产品来源不能为空 ");
		}
		if (value.getSpecification()== null || value.getSpecification().length()>128) {
			throw new BusinessException("产品规格不能为空 或长度不能超过128个字符");
		}
		if (value.getProductName()== null || value.getProductName().length()>32) {
			throw new BusinessException("产品名称不能为空或长度不能超过32个字符 ");
		}
		
		if (value.getVolume() == null) {
			throw new BusinessException("体积限制不能为空 ");
		}
		if (value.getWeight() == null ) {
			throw new BusinessException("重量限制不能为空 ");
		}
		if (value.getSizeLength() == null ) {
			throw new BusinessException("尺寸-长不能为空 ");
		}
		if (value.getSizeHeight() == null ) {
			throw new BusinessException("尺寸-高不能为空");
		}
		if (value.getSizeWidth() == null ) {
			throw new BusinessException("尺寸-宽不能为空");
		}
		if (value.getRemark() != null ) {
			if(value.getRemark().length()>128){
				throw new BusinessException("备注不能超过128个字符");
			}
		}
	}
	
	@Override
	public void updateSaveCheck(ProductMain value) throws BusinessException, SQLException {
		if (value.getCreateUserId() == null || value.getCreateUserId().equals(0L)) {
			throw new BusinessException("请先登录 ");
		}
		
		if (value.getSupplierId() == null || value.getSupplierId().equals(0L)) {
			throw new BusinessException("供应商不能为空 ");
		}
		if (value.getClassesId() == null || value.getClassesId().equals(0L)) {
			throw new BusinessException("产品分类不能为空 ");
		}
		if (value.getProductTypeDictId() == null || value.getProductTypeDictId().equals(0L)) {
			throw new BusinessException("产品类型不能为空 ");
		}
		if (value.getProductStatusDictId() == null || value.getProductStatusDictId().equals(0L)) {
			throw new BusinessException("产品状态不能为空 ");
		}
		if (value.getProductSourceDictId() == null || value.getProductSourceDictId().equals(0L)) {
			throw new BusinessException("产品来源不能为空 ");
		}
		if (value.getSpecification()== null || value.getSpecification().length()>128) {
			throw new BusinessException("产品规格不能为空 或长度不能超过128个字符");
		}
		if (value.getProductName()== null || value.getProductName().length()>32) {
			throw new BusinessException("产品名称不能为空或长度不能超过32个字符 ");
		}
		 
		if (value.getVolume() == null) {
			throw new BusinessException("体积限制不能为空 ");
		}
		if (value.getWeight() == null ) {
			throw new BusinessException("重量限制不能为空 ");
		}
		if (value.getSizeLength() == null ) {
			throw new BusinessException("尺寸-长不能为空 ");
		}
		if (value.getSizeHeight() == null ) {
			throw new BusinessException("尺寸-高不能为空");
		}
		if (value.getSizeWidth() == null ) {
			throw new BusinessException("尺寸-宽不能为空");
		}
		if (value.getRemark() != null ) {
			if(value.getRemark().length()>128){
				throw new BusinessException("备注不能超过128个字符");
			}
		}
	}
	
	@Override
	public void deleteSaveCheck(ProductMain value) throws BusinessException, SQLException {
	
	}
	
	
			
}
