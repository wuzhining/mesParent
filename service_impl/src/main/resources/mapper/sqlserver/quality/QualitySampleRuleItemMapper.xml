<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.techsoft.mapper.quality.QualitySampleRuleItemMapper">
<cache type="org.mybatis.caches.redis.RedisCache"/>
	<resultMap id="QualitySampleRuleItem" type="com.techsoft.entity.common.QualitySampleRuleItem" 
			   extends="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityMap" > 
		<result column="TENANT_ID" property="tenantId" />
		<result column="SAMPLE_RULE_ID" property="sampleRuleId" />
		<result column="SAMPLE_LETTER" property="sampleLetter" />
		<result column="QUANTITY" property="quantity" />
		<result column="QUANTITY_AC" property="quantityAc" />
		<result column="QUANTITY_RE" property="quantityRe" />
	</resultMap>

	<sql id="Base_condition_Sql">
		<if test="tenantId != null">
			AND A.TENANT_ID= #{tenantId}
		</if>
		<if test="sampleRuleId != null">
			AND A.SAMPLE_RULE_ID= #{sampleRuleId}
		</if>
		<if test="sampleLetter != null">
			AND A.SAMPLE_LETTER= #{sampleLetter}
		</if>
		<if test="quantity != null">
			AND A.QUANTITY= #{quantity}
		</if>
		<if test="quantityAc != null">
			AND A.QUANTITY_AC= #{quantityAc}
		</if>
		<if test="quantityRe != null">
			AND A.QUANTITY_RE= #{quantityRe}
		</if>
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityConditionSql" />		
	</sql>
	
	<sql id="Date_Condition_sql">	
	</sql>

	<sql id="Foreign_Key_Condition_Sql">
	
	</sql>
	
	<sql id="Like_Condition_Sql">
	</sql>
	
	<sql id="Exp_condition_Sql">
	</sql>
	<!--备注：此处id千万不要做排序 -->
	<sql id="Order_By_Sql">
	 	order by id 
	</sql>	
		
	<sql id="Base_Column_List">    
		A.TENANT_ID,
		A.SAMPLE_RULE_ID,
		A.SAMPLE_LETTER,
		A.QUANTITY,
		A.QUANTITY_AC,
		A.QUANTITY_RE
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityColumnList" />
	</sql>

	<select id="getIDValue" flushCache="true" useCache="false" resultType="java.lang.Long">
		SELECT next value for QUALITY_SAMPLE_RULE_ITEM_SEQ AS IDValue
	</select>
	
	<select id="getMaxId" flushCache="true" useCache="false" resultType="java.lang.Long">
		SELECT max(id) as maxId from QUALITY_SAMPLE_RULE_ITEM
	</select>
		
	<select id="selectById" parameterType="java.lang.Long" useCache="true"
			resultType="com.techsoft.entity.common.QualitySampleRuleItem">
		SELECT
		<include refid="Base_Column_List" />
		FROM QUALITY_SAMPLE_RULE_ITEM A
		WHERE (A.DEL_FLAG = 0) and (A.ID=#{id})
	</select>
	
	<select id="selectByIds" parameterType="java.util.List" useCache="false"
			resultType="com.techsoft.entity.common.QualitySampleRuleItem">
		SELECT
		<include refid="Base_Column_List" />
		FROM QUALITY_SAMPLE_RULE_ITEM A WHERE (A.DEL_FLAG = 0) and (A.ID IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>)
	</select>

	<update id="deleteById" flushCache="true" parameterType="java.lang.Long">
		UPDATE  A SET 
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityDelete" />
		FROM QUALITY_SAMPLE_RULE_ITEM A
		WHERE (A.ID=#{id}) 
	</update>
	
	<update id="deleteByIds" flushCache="true" parameterType="java.util.List">
		UPDATE   A SET 
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityDelete" />
		FROM QUALITY_SAMPLE_RULE_ITEM A
		WHERE (A.ID IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>)   
	</update>
		
	<update id="deleteByForeignKey" flushCache="true" parameterType="com.techsoft.entity.common.QualitySampleRuleItem">
		UPDATE  A SET 
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityDelete" />
		FROM QUALITY_SAMPLE_RULE_ITEM A
		WHERE (1 = 1) 
		<include refid="Foreign_Key_Condition_Sql" />
	</update>

	<insert id="insertEntity" flushCache="true" parameterType="com.techsoft.entity.common.QualitySampleRuleItem">
		INSERT INTO QUALITY_SAMPLE_RULE_ITEM (
		TENANT_ID,
		SAMPLE_RULE_ID,
		SAMPLE_LETTER,
		QUANTITY,
		QUANTITY_AC,
		QUANTITY_RE
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityInsertColumn" />		
		)
		VALUES(	
		#{tenantId},
		#{sampleRuleId},
		#{sampleLetter},
		#{quantity},
		#{quantityAc},
		#{quantityRe}
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityInsertValue" />		
		)
	</insert>
	
	<update id="updateEntity" flushCache="true" parameterType="com.techsoft.entity.common.QualitySampleRuleItem">
		UPDATE QUALITY_SAMPLE_RULE_ITEM SET
		TENANT_ID=#{tenantId},
		SAMPLE_RULE_ID=#{sampleRuleId},
		SAMPLE_LETTER=#{sampleLetter},
		QUANTITY=#{quantity},
		QUANTITY_AC=#{quantityAc},
		QUANTITY_RE=#{quantityRe},
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityUpdate" />
		WHERE ID=#{id} AND VERSION=#{version}  			
	</update>
	
	<update id="updatePartEntity" flushCache="true" parameterType="com.techsoft.entity.common.QualitySampleRuleItem">
		UPDATE QUALITY_SAMPLE_RULE_ITEM SET
		<if test="tenantId != null" >
			TENANT_ID=#{tenantId},
		</if>
		<if test="sampleRuleId != null" >
			SAMPLE_RULE_ID=#{sampleRuleId},
		</if>
		<if test="sampleLetter != null" >
			SAMPLE_LETTER=#{sampleLetter},
		</if>
		<if test="quantity != null" >
			QUANTITY=#{quantity},
		</if>
		<if test="quantityAc != null" >
			QUANTITY_AC=#{quantityAc},
		</if>
		<if test="quantityRe != null" >
			QUANTITY_RE=#{quantityRe},
		</if>
		<include refid="com.techsoft.common.mapper.BaseEntityMapper.BaseEntityUpdate" />
		WHERE ID=#{id} AND VERSION=#{version}  			
	</update>	
	
	<select id="selectListByEntityParamVo" parameterType="com.techsoft.entity.quality.QualitySampleRuleItemParamVo"
		      resultType="com.techsoft.entity.common.QualitySampleRuleItem" useCache="false">
		SELECT
		<include refid="Base_Column_List" />
		FROM QUALITY_SAMPLE_RULE_ITEM A
		WHERE (A.DEL_FLAG = 0)
		<include refid="Base_condition_Sql" />
		<include refid="Date_Condition_sql" />
		<include refid="Foreign_Key_Condition_Sql" />
		<include refid="Like_Condition_Sql" />
		<include refid="Exp_condition_Sql" />
		<include refid="Order_By_Sql" />
	</select>
	
	
	<!-- 批量新增AQL抽样明细 -->
	<insert id="insertBatch" flushCache="true" parameterType="java.util.List">
	  	 INSERT INTO QUALITY_SAMPLE_RULE_ITEM (
	  	    ID,
			TENANT_ID,
			SAMPLE_RULE_ID,
			SAMPLE_LETTER,
			QUANTITY,
			QUANTITY_AC,
			QUANTITY_RE,
            VERSION,
            DEL_FLAG,
            CREATE_USER_ID,
            MODIFY_USER_ID,
			CREATE_TIME,
			MODIFY_TIME
			) VALUES
			<foreach collection="list" item="item" separator=",">
			(
			#{item.id},	
			#{item.tenantId},
			#{item.sampleRuleId},
			#{item.sampleLetter},
			#{item.quantity},
			#{item.quantityAc},
			#{item.quantityRe},
			1,
			0,
			#{item.createUserId},
			#{item.modifyUserId}, 
			 now(),
			 now()
			)
			 </foreach>
	</insert>
		
	<!-- 批量修改 -->
	<update id="updateBatch" parameterType="java.util.List">
    	<foreach collection="list" item="item" index="index" separator=";">
	    	UPDATE QUALITY_SAMPLE_RULE_ITEM
	    	   <set>
	    	   
	    	   		<if test="item.tenantId != null" >
						TENANT_ID=#{item.tenantId},
					</if>
					<if test="item.sampleRuleId != null" >
						SAMPLE_RULE_ID=#{item.sampleRuleId},
					</if>
					<if test="item.sampleLetter != null" >
						SAMPLE_LETTER=#{item.sampleLetter},
					</if>
					<if test="item.quantity != null" >
						QUANTITY=#{item.quantity},
					</if>
					<if test="item.quantityAc != null" >
						QUANTITY_AC=#{item.quantityAc},
					</if>
					<if test="item.quantityRe != null" >
						QUANTITY_RE=#{item.quantityRe},
					</if>
					
					<if test="item.modifyUserId != null" >
						MODIFY_USER_ID=#{item.modifyUserId},
					</if>
					MODIFY_TIME=now(),
				    VERSION = VERSION + 1	
			 </set>
			 <where>
				    ID=#{item.id}
			 </where>
		 </foreach>
    </update>

</mapper>